// server.js

const express = require("express");
const axios = require("axios"); // Import axios to make HTTP requests
const cors = require('cors')
const app = express();

require('dotenv').config()

app.use(cors());

// Middleware to parse JSON request bodies
app.use(express.json());

// Function to make the API call to Cloudflare using Axios
async function run(model, input) {
  try {
    const response = await axios.post(
      `https://api.cloudflare.com/client/v4/accounts/${process.env.ACCOUNT_ID}/ai/run/${model}`,
      input, // Send the input as the request body
      {
        headers: {
          Authorization: `Bearer ${process.env.API_KEY}`,
          "Content-Type": "application/json",
        },
      }
    );
    
    return response.data; // Axios automatically parses JSON response
  } catch (error) {
    // If there's an error (e.g., network issue, or API call failure), handle it here
    console.log(error.response)
    throw new Error(error.response ? error.response.data.message : error.message);
  }
}

// API endpoint to call the `run` function and return the result
app.post("/run-chat", async (req, res) => {
  const { model, input } = req.body; // Get model and input from request body
  console.log(model, input)
  try {
    // Call the run function
    const result = await run(model, input);
    
    // Return the result as JSON
    res.json(result);
  } catch (error) {
    // Handle errors (e.g., Cloudflare API call failed)
    console.log(error)
    res.status(500).json({ error: error.message });
  }
});

// Start the server on port 3000
const PORT = 4000;
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
